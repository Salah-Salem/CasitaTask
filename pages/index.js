import 'bootstrap/dist/css/bootstrap.css'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import { Map } from '../components'
import { Entries } from '../constants/feed'
import styles from '../styles/Home.module.css'
export default function Home() {
  const { Entry } = Entries
  const [results, setResults] = useState(Entry)
  const [token, setToken] = useState('')
  const [token2, setToken2] = useState('')

  useEffect(() => {
    if (token2 !== '' && token == '') {
      setResults((prev) => [
        ...Entry.filter((item) => item.sentiment == token2),
      ])
    } else if (token2 == '' && token !== '') {
      setResults((prev) => [
        ...Entry.filter((item) => item.message.includes(token)),
      ])
    } else if (token2 !== '' && token !== '') {
      setResults((prev) => [
        ...results.filter((item) => item.message.includes(token)),
      ])
    } else {
      setResults(Entry)
    }
  }, [token, token2])

  return (
    <div className={styles.container}>
      <Head>
        <title>Casita</title>
        <meta name="description" content="Generated by Salah Salem" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className="row pt-5 pb-5 w-100">
          <form>
            <div className="row">
              <div className="col-6">
                <input
                  type="text"
                  name="searchInput"
                  id="searchInput"
                  onChange={(e) => setToken(e.target.value)}
                />
              </div>
              <div className="col-6">
                <select onChange={(e) => setToken2(e.target.value)}>
                  <option value="">Select a sentiment</option>
                  <option value="Neutrual">Neutrual</option>
                  <option value="Positive">Positive</option>
                  <option value="Negative">Negative</option>
                </select>
              </div>
              <div className="col-12">
                {results
                  // .filter((item) => item.message.includes(token))
                  .map((item, index) => (
                    <div key={index}>
                      <h2>
                        {index + 1}-{item.sentiment}
                      </h2>
                      <p>{item.message}</p>
                    </div>
                  ))}
              </div>
            </div>
          </form>
        </div>
        <Map />
      </main>
    </div>
  )
}
